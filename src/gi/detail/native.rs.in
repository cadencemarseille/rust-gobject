// Copyright 2013 The rust-gobject authors.
//
// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license
// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your
// option. This file may not be copied, modified, or distributed
// except according to those terms.

use glib;
use glib::detail::error::GError;
use std::libc;

#[link_args = "@GOBJECT_INTROSPECTION_LIBS@"]
extern {
    fn g_base_info_ref(info: *mut ::detail::GIBaseInfo) -> *mut ::detail::GIBaseInfo;
    fn g_base_info_unref(info: *mut ::detail::GIBaseInfo);
    fn g_base_info_get_type(info: *mut ::detail::GIBaseInfo) -> ::detail::GIInfoType;
    fn g_base_info_get_name(info: *mut ::detail::GIBaseInfo) -> *glib::gchar;
    fn g_base_info_get_namespace(info: *mut ::detail::GIBaseInfo) -> *glib::gchar;
    fn g_base_info_is_deprecated(info: *mut ::detail::GIBaseInfo) -> glib::gboolean;
    fn g_base_info_get_attribute(info: *mut ::detail::GIBaseInfo, name: *glib::gchar) -> *glib::gchar;
    fn g_base_info_iterate_attributes(info: *mut ::detail::GIBaseInfo, iterator: *mut ::detail::GIAttributeIter, name: *mut *libc::c_char, value: *mut *libc::c_char) -> glib::gboolean;
    fn g_base_info_get_container(info: *mut ::detail::GIBaseInfo) -> *mut ::detail::GIBaseInfo;
    fn g_base_info_get_typelib(info: *mut ::detail::GIBaseInfo) -> *mut ::detail::GITypelib;
    fn g_base_info_equal(info1: *mut ::detail::GIBaseInfo, info2: *mut ::detail::GIBaseInfo) -> glib::gboolean;

    fn g_typelib_free(typelib: *mut ::detail::GITypelib);

    fn g_irepository_get_default() -> *mut ::detail::GIRepository;
    fn g_irepository_require(repository: *mut ::detail::GIRepository, namespace: *glib::gchar, version: *glib::gchar, flags: ::detail::GIRepositoryLoadFlags, error: *mut *mut GError) -> *mut ::detail::GITypelib;
    fn g_irepository_get_loaded_namespaces(repository: *mut ::detail::GIRepository) -> *mut *mut glib::gchar;
    fn g_irepository_get_n_infos(repository: *mut ::detail::GIRepository, namespace: *glib::gchar) -> glib::gint;
    fn g_irepository_get_info(repository: *mut ::detail::GIRepository, namespace: *glib::gchar, index: glib::gint) -> *mut ::detail::GIBaseInfo;
}
